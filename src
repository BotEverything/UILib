local library = {}

local ByteHub = Instance.new("ScreenGui")
local Main = Instance.new("Frame")
local topbar = Instance.new("Frame")
local UICorner = Instance.new("UICorner")
local title = Instance.new("TextLabel")
local exit = Instance.new("ImageButton")
local UICorner_2 = Instance.new("UICorner")
local tabs = Instance.new("Frame")
local UICorner_3 = Instance.new("UICorner")
local tabs_2 = Instance.new("Frame")
local UIListLayout = Instance.new("UIListLayout")
local tab1 = Instance.new("Frame")
local TextButton = Instance.new("TextButton")
local Frame = Instance.new("Frame")
local tab2 = Instance.new("Frame")
local TextButton_2 = Instance.new("TextButton")
local Frame_2 = Instance.new("Frame")
local tab3 = Instance.new("Frame")
local TextButton_3 = Instance.new("TextButton")
local Frame_3 = Instance.new("Frame")
local content = Instance.new("Frame")
local content2 = Instance.new("Frame")
local _1button = Instance.new("TextButton")
local UICorner_4 = Instance.new("UICorner")
local UIListLayout_2 = Instance.new("UIListLayout")
local content1 = Instance.new("Frame")
local _1button_2 = Instance.new("TextButton")
local UICorner_5 = Instance.new("UICorner")
local _3toggle = Instance.new("Frame")
local UICorner_6 = Instance.new("UICorner")
local name = Instance.new("TextLabel")
local toggle = Instance.new("ImageButton")
local UICorner_7 = Instance.new("UICorner")
local bind = Instance.new("TextButton")
local UIListLayout_3 = Instance.new("UIListLayout")
local _2slider = Instance.new("Frame")
local UICorner_8 = Instance.new("UICorner")
local SliderBackground = Instance.new("Frame")
local UICorner_9 = Instance.new("UICorner")
local SliderFill = Instance.new("Frame")
local UICorner_10 = Instance.new("UICorner")
local value = Instance.new("TextBox")
local title_2 = Instance.new("TextLabel")
local content3 = Instance.new("Frame")
local _1button_3 = Instance.new("TextButton")
local UICorner_11 = Instance.new("UICorner")
local UIListLayout_4 = Instance.new("UIListLayout")
local mainstroke = Instance.new("UIStroke")

function CreateTabScript(tabButton, tabFrame, content1, content2, content3)
    local function tabClick()
        local tabName = tabButton.Parent.Name
        local tabframer = tabButton.Parent:WaitForChild("Frame")
        local tabx = tabButton.Parent
        local contentFrameName = tabName:sub(1, -4) .. "Content"
        local contentFrame = Main.content:FindFirstChild(contentFrameName)
        if not contentFrame then
            return
        end
        for _, content in ipairs(Main.content:GetChildren()) do
            if content:IsA("Frame") then
                content.Visible = false
            end
        end

        contentFrame.Visible = true
        tabframer.BackgroundTransparency = 0
        tabx.BackgroundTransparency = 0

        local parent = tabButton.Parent.Parent
        for _, tab in ipairs(parent:GetChildren()) do
            if tab:IsA("Frame") and tab.Name ~= tabButton.Parent.Name then
                local frame = tab:FindFirstChild("Frame")
                if frame then
                    frame.BackgroundTransparency = 1
                    frame.Parent.BackgroundTransparency = 1
                end
            end
        end
    end
    tabButton.MouseButton1Click:Connect(tabClick)
end

function library:Init()
    ByteHub.Name = "ByteHub"
    ByteHub.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
    ByteHub.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
    
    Main.Name = "Main"
    Main.Parent = ByteHub
    Main.AnchorPoint = Vector2.new(0.5, 0.5)
    Main.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
    Main.BorderColor3 = Color3.fromRGB(0, 0, 0)
    Main.BorderSizePixel = 0
    Main.Position = UDim2.new(0.5, 0, 0.5, 0)
    Main.Size = UDim2.new(0.371216625, 0, 0.625, 0)

    mainstroke.Parent = Main
    mainstroke.ApplyStrokeMode = "Border"
    mainstroke.Color = Color3.fromRGB(85, 85, 255)
    mainstroke.Thickness = 1
        
    topbar.Name = "topbar"
    topbar.Parent = Main
    topbar.AnchorPoint = Vector2.new(0.5, 0.5)
    topbar.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
    topbar.BorderColor3 = Color3.fromRGB(0, 0, 0)
    topbar.BorderSizePixel = 0
    topbar.Position = UDim2.new(0.49999997, 0, 0.0500000007, 0)
    topbar.Size = UDim2.new(0.99999994, 0, 0.100000001, 0)
    topbar.ZIndex = 2
    
    UICorner.CornerRadius = UDim.new(0, 5)
    UICorner.Parent = topbar
    
    title.Name = "title"
    title.Parent = topbar
    title.AnchorPoint = Vector2.new(0.5, 0.5)
    title.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    title.BackgroundTransparency = 1.000
    title.BorderColor3 = Color3.fromRGB(0, 0, 0)
    title.BorderSizePixel = 0
    title.Position = UDim2.new(0.126577079, 0, 0.500001431, 0)
    title.Size = UDim2.new(0.197094321, 0, 1.0000006, 0)
    title.Font = Enum.Font.GothamBold
    title.Text = "ByteHub"
    title.TextColor3 = Color3.fromRGB(255, 255, 255)
    title.TextSize = 15.000
    title.TextStrokeColor3 = Color3.fromRGB(255, 255, 255)
    title.TextXAlignment = Enum.TextXAlignment.Left
    
    exit.Name = "exit"
    exit.Parent = topbar
    exit.AnchorPoint = Vector2.new(0.5, 0.5)
    exit.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    exit.BackgroundTransparency = 1.000
    exit.BorderColor3 = Color3.fromRGB(0, 0, 0)
    exit.BorderSizePixel = 0
    exit.Position = UDim2.new(0.954631865, 0, 0.5, 0)
    exit.Size = UDim2.new(0.0489373505, 0, 0.625, 0)
    exit.Image = "rbxassetid://16875574263"
    
    UICorner_2.CornerRadius = UDim.new(0, 5)
    UICorner_2.Parent = Main

    content.Name = "content"
    content.Parent = Main
    content.AnchorPoint = Vector2.new(0.5, 0.5)
    content.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
    content.BackgroundTransparency = 1.000
    content.BorderColor3 = Color3.fromRGB(0, 0, 0)
    content.BorderSizePixel = 0
    content.Position = UDim2.new(0.649999976, 0, 0.550000012, 0)
    content.Size = UDim2.new(0.660032034, 0, 0.850000024, 0)
    content.ZIndex = 2

    tabs.Name = "tabs"
    tabs.Parent = Main
    tabs.AnchorPoint = Vector2.new(0.5, 0.5)
    tabs.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
    tabs.BorderColor3 = Color3.fromRGB(0, 0, 0)
    tabs.BorderSizePixel = 0
    tabs.Position = UDim2.new(0.150000006, 0, 0.5, 0)
    tabs.Size = UDim2.new(0.300000012, 0, 1.00000012, 0)
    
    UICorner_3.CornerRadius = UDim.new(0, 5)
    UICorner_3.Parent = tabs

    tabs_2.Name = "tabs"
    tabs_2.Parent = tabs
    tabs_2.AnchorPoint = Vector2.new(0.5, 0.5)
    tabs_2.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
    tabs_2.BackgroundTransparency = 1.000
    tabs_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
    tabs_2.BorderSizePixel = 0
    tabs_2.Position = UDim2.new(0.499999851, 0, 0.56250006, 0)
    tabs_2.Size = UDim2.new(0.999999702, 0, 0.875, 0)

    UIListLayout.Parent = tabs_2
    UIListLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center
    UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder
    UIListLayout.Padding = UDim.new(0.0299999993, 0)

    local title = topbar:WaitForChild("title")
    
    local function updateTitleColor()
        local text = title.Text:lower()
        if text:find("byte") and text:find("hub") then
            title.RichText = true
            title.Text = "<font color=\"rgb(85, 85, 255)\">Byte</font><font color=\"#FFFFFF\">Hub</font>"
        end
    end
    
    title:GetPropertyChangedSignal("Text"):Connect(updateTitleColor)
    updateTitleColor()
    
    exit.MouseButton1Click:Connect(function()
        print("Exit button clicked")
        ByteHub:Destroy()
    end)

    local function OVZHPOI_fake_script(Main)
        local UserInputService = game:GetService("UserInputService")
        local RunService = game:GetService("RunService")
        
        local gui = Main
        local topnavFrame = gui:WaitForChild("topbar")
        
        local dragging = false
        local dragInput
        local dragStart
        local startPos
        
        function Lerp(a, b, m)
            return a + (b - a) * m
        end
        
        local lastMousePos
        local lastGoalPos
        local DRAG_SPEED = 10
        
        function Update(dt)
            if not startPos then return end
            if not dragging and lastGoalPos then
                gui.Position = UDim2.new(startPos.X.Scale, Lerp(gui.Position.X.Offset, lastGoalPos.X.Offset, dt * DRAG_SPEED), startPos.Y.Scale, Lerp(gui.Position.Y.Offset, lastGoalPos.Y.Offset, dt * DRAG_SPEED))
                return 
            end
        
            local delta = lastMousePos - UserInputService:GetMouseLocation()
            local xGoal = startPos.X.Offset - delta.X
            local yGoal = startPos.Y.Offset - delta.Y
            lastGoalPos = UDim2.new(startPos.X.Scale, xGoal, startPos.Y.Scale, yGoal)
            gui.Position = UDim2.new(startPos.X.Scale, Lerp(gui.Position.X.Offset, xGoal, dt * DRAG_SPEED), startPos.Y.Scale, Lerp(gui.Position.Y.Offset, yGoal, dt * DRAG_SPEED))
        end
        
        gui.InputBegan:Connect(function(input)
            if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
                local isInsideTopnav = topnavFrame.AbsolutePosition.X <= input.Position.X and input.Position.X <= topnavFrame.AbsolutePosition.X + topnavFrame.AbsoluteSize.X
                    and topnavFrame.AbsolutePosition.Y <= input.Position.Y and input.Position.Y <= topnavFrame.AbsolutePosition.Y + topnavFrame.AbsoluteSize.Y
                if isInsideTopnav then
                    dragging = true
                    dragStart = input.Position
                    startPos = gui.Position
                    lastMousePos = UserInputService:GetMouseLocation()
        
                    input.Changed:Connect(function()
                        if input.UserInputState == Enum.UserInputState.End then
                            dragging = false
                        end
                    end)
                end
            end
        end)
        
        gui.InputChanged:Connect(function(input)
            if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
                dragInput = input
            end
        end)
        
        RunService.Heartbeat:Connect(Update)
        
    end
    OVZHPOI_fake_script(Main)   
    return library 
end

function library:NewTab(name)
    local tab = Instance.new("Frame")
    local button = Instance.new("TextButton")
    local frame = Instance.new("Frame")

    tab.Name = name.. "Tab"
    tab.Parent = tabs_2
    tab.AnchorPoint = Vector2.new(0.5, 0.5)
    tab.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
    tab.BackgroundTransparency = 1.000
    tab.BorderColor3 = Color3.fromRGB(0, 0, 0)
    tab.BorderSizePixel = 0
    tab.Position = UDim2.new(0.500000119, 0, 0.0398215726, 0)
    tab.Size = UDim2.new(0.876633704, 0, 0.0796431452, 0)

    button.Parent = tab
    button.BackgroundColor3 = Color3.fromRGB(55, 55, 55)
    button.BackgroundTransparency = 1.000
    button.BorderColor3 = Color3.fromRGB(0, 0, 0)
    button.BorderSizePixel = 0
    button.Position = UDim2.new(0.0362182111, 0, 0, 0)
    button.Size = UDim2.new(0.91818893, 0, 0.965000689, 0)
    button.Font = Enum.Font.GothamMedium
    button.Text = name
    button.TextColor3 = Color3.fromRGB(255, 255, 255)
    button.TextSize = 14.000
    button.TextXAlignment = Enum.TextXAlignment.Left

    frame.Parent = tab
    frame.AnchorPoint = Vector2.new(0.5, 0.5)
    frame.BackgroundColor3 = Color3.fromRGB(85, 85, 255)
    frame.BackgroundTransparency = 1.000
    frame.BorderColor3 = Color3.fromRGB(0, 0, 0)
    frame.BorderSizePixel = 0
    frame.Position = UDim2.new(1.00387597, 0, 0.49000001, 0)
    frame.Size = UDim2.new(0.0149999997, 0, 1, 0)

    CreateTabScript(button, frame, content1, content2, content3)

    local tabContent = Instance.new("Frame")
    local UIList = Instance.new("UIListLayout")

    tabContent.Name = name.."Content"
    tabContent.Parent = content
    tabContent.AnchorPoint = Vector2.new(0.5, 0.5)
    tabContent.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    tabContent.BackgroundTransparency = 1.000
    tabContent.BorderColor3 = Color3.fromRGB(0, 0, 0)
    tabContent.BorderSizePixel = 0
    tabContent.Position = UDim2.new(0.498613507, 0, 0.497794122, 0)
    tabContent.Size = UDim2.new(1, 0, 1, 0)
    tabContent.Visible = false
    tabContent.ZIndex = 2

    UIList.Parent = tabContent
    UIList.Padding = UDim.new(0.0149999997, 0)
    
    return tab
end

function library:Toggle(tab, togglename, callback)
    local contentFrameName = string.gsub(tab.Name, "Tab$", "") .. "Content"
    local contentFrame = Main.content:FindFirstChild(contentFrameName)
    if not contentFrame then
        return
    end

    local toggleFrame = Instance.new("Frame")
    toggleFrame.Name = contentFrameName.. "Toggle"
    toggleFrame.Parent = contentFrame
    toggleFrame.AnchorPoint = Vector2.new(0.5, 0.5)
    toggleFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
    toggleFrame.BorderColor3 = Color3.fromRGB(0, 0, 0)
    toggleFrame.BorderSizePixel = 0
    toggleFrame.Position = UDim2.new(0.5, 0, 0.330130488, 0)
    toggleFrame.Size = UDim2.new(1, 0, 0.0898235217, 0)
    
    local nameLabel = Instance.new("TextLabel")
    nameLabel.Name = "name"
    nameLabel.Parent = toggleFrame
    nameLabel.AnchorPoint = Vector2.new(0.5, 0.5)
    nameLabel.BackgroundTransparency = 1
    nameLabel.Position = UDim2.new(0.123, 0, 0.5, 0)
    nameLabel.Size = UDim2.new(0.2, 0, 1, 0)
    nameLabel.Font = Enum.Font.Gotham
    nameLabel.Text = togglename
    nameLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    nameLabel.TextSize = 13
    nameLabel.TextXAlignment = Enum.TextXAlignment.Left
    
    local toggleButton = Instance.new("TextButton")
    toggleButton.Name = "toggle"
    toggleButton.Parent = toggleFrame
    toggleButton.AnchorPoint = Vector2.new(0.5, 0.5)
    toggleButton.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
    toggleButton.BorderColor3 = Color3.fromRGB(0, 0, 0)
    toggleButton.BorderSizePixel = 0
    toggleButton.Position = UDim2.new(0.937, 0, 0.5, 0)
    toggleButton.Size = UDim2.new(0.06, 0, 0.63, 0)
    toggleButton.Text = ""
    
    local bindButton = Instance.new("TextButton")
    bindButton.Name = "bind"
    bindButton.Parent = toggleFrame
    bindButton.AnchorPoint = Vector2.new(0.5, 0.5)
    bindButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    bindButton.BackgroundTransparency = 1
    bindButton.Position = UDim2.new(0.781, 0, 0.5, 0)
    bindButton.Size = UDim2.new(0.188, 0, 1, 0)
    bindButton.Font = Enum.Font.SourceSans
    bindButton.Text = "[bind]"
    bindButton.TextColor3 = Color3.fromRGB(200, 200, 200)
    bindButton.TextSize = 14
    bindButton.TextXAlignment = Enum.TextXAlignment.Right

    local toggleCorner = Instance.new("UICorner")
    toggleCorner.CornerRadius = UDim.new(0, 4)
    toggleCorner.Parent = toggleButton
    local toggleCorner2 = Instance.new("UICorner")
    toggleCorner2.CornerRadius = UDim.new(0, 4)
    toggleCorner2.Parent = toggleFrame

    local toggleVisible = false

    local function toggleVisibility()
        toggleVisible = not toggleVisible
        if toggleVisible then
            toggleButton.BackgroundColor3 = Color3.fromRGB(85, 85, 255)
        else
            toggleButton.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
        end
        if callback then
            callback(toggleVisible)
        end
        return toggleVisible
    end

    toggleButton.MouseButton1Click:Connect(function()
        toggleVisibility()
    end)

    local keybind = Enum.KeyCode.Insert

    local function handleKeyBinding(input)
        if input.KeyCode == keybind then
            toggleVisibility()
        end
    end

    local function updateBindButtonText()
        bindButton.Text = "[ ... ]"
        local input = game:GetService("UserInputService").InputBegan:Wait()
        if input and input.KeyCode then
            keybind = input.KeyCode
            bindButton.Text = "Bind: " .. keybind.Name
        end
    end

    bindButton.MouseButton1Click:Connect(function()
        bindButton.Text = "[ ... ]"
        coroutine.wrap(updateBindButtonText)()
    end)

    game:GetService("UserInputService").InputBegan:Connect(handleKeyBinding)

    return toggleVisible
end

function library:Button(tab, buttonname, callback)
    local contentFrameName = string.gsub(tab.Name, "Tab$", "") .. "Content"
    local contentFrame = Main.content:FindFirstChild(contentFrameName)
    if not contentFrame then
        return
    end

    local button = Instance.new("TextButton")
    button.Name = buttonname
    button.Parent = contentFrame
    button.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
    button.BorderColor3 = Color3.fromRGB(0, 0, 0)
    button.BorderSizePixel = 0
    button.Size = UDim2.new(0.999999881, 0, 0.0813220292, 0)
    button.Font = Enum.Font.GothamMedium
    button.Text = buttonname
    button.TextColor3 = Color3.fromRGB(255, 255, 255)
    button.TextSize = 12.000

    local buttonCorner = Instance.new("UICorner")
    buttonCorner.CornerRadius = UDim.new(0, 4)
    buttonCorner.Parent = button

    button.MouseButton1Click:Connect(function()
        if callback then
            callback()
        end
    end)

    return button
end

function library:Slider(tab, slidername, value1, value2)
    local contentFrameName = string.gsub(tab.Name, "Tab$", "") .. "Content"
    local contentFrame = Main.content:FindFirstChild(contentFrameName)
    if not contentFrame then
        return
    end

    local sliderFrame = Instance.new("Frame")
    sliderFrame.Name = slidername .. "Slider"
    sliderFrame.Parent = contentFrame
    sliderFrame.AnchorPoint = Vector2.new(0.5, 0.5)
    sliderFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
    sliderFrame.BorderColor3 = Color3.fromRGB(0, 0, 0)
    sliderFrame.BorderSizePixel = 0
    sliderFrame.Position = UDim2.new(0.531084359, 0, 0.0273880232, 0)
    sliderFrame.Size = UDim2.new(0.999999881, 0, 0.173896745, 0)
    sliderFrame.ZIndex = 2

    local sliderBackground = Instance.new("Frame")
    sliderBackground.Name = "SliderBackground"
    sliderBackground.Parent = sliderFrame
    sliderBackground.AnchorPoint = Vector2.new(0.5, 0.5)
    sliderBackground.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
    sliderBackground.BorderColor3 = Color3.fromRGB(0, 0, 0)
    sliderBackground.BorderSizePixel = 0
    sliderBackground.Position = UDim2.new(0.497571856, 0, 0.683362305, 0)
    sliderBackground.Size = UDim2.new(0.951625526, 0, 0.147045374, 0)
    sliderBackground.ZIndex = 2

    local sliderFill = Instance.new("Frame")
    sliderFill.Name = "SliderFill"
    sliderFill.Parent = sliderBackground
    sliderFill.BackgroundColor3 = Color3.fromRGB(85, 85, 255)
    sliderFill.BorderColor3 = Color3.fromRGB(0, 0, 0)
    sliderFill.BorderSizePixel = 0
    sliderFill.Position = UDim2.new(0, 0, 4.59408966e-06, 0)
    sliderFill.Size = UDim2.new(0, 0, 0.999993443, 0)
    sliderFill.ZIndex = 2

    local sliderValue = Instance.new("TextBox")
    sliderValue.Name = "value"
    sliderValue.Parent = sliderFrame
    sliderValue.AnchorPoint = Vector2.new(0.5, 0.5)
    sliderValue.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    sliderValue.BackgroundTransparency = 1.000
    sliderValue.BorderColor3 = Color3.fromRGB(0, 0, 0)
    sliderValue.BorderSizePixel = 0
    sliderValue.Position = UDim2.new(0.910276532, 0, 0.271999925, 0)
    sliderValue.Size = UDim2.new(0.126215741, 0, 0.328000039, 0)
    sliderValue.Font = Enum.Font.Gotham
    sliderValue.Text = tostring(value1)
    sliderValue.TextColor3 = Color3.fromRGB(255, 255, 255)
    sliderValue.TextSize = 12.000
    sliderValue.TextXAlignment = Enum.TextXAlignment.Right

    local sliderTitle = Instance.new("TextLabel")
    sliderTitle.Name = "title"
    sliderTitle.Parent = sliderFrame
    sliderTitle.AnchorPoint = Vector2.new(0.5, 0.5)
    sliderTitle.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    sliderTitle.BackgroundTransparency = 1.000
    sliderTitle.BorderColor3 = Color3.fromRGB(0, 0, 0)
    sliderTitle.BorderSizePixel = 0
    sliderTitle.Position = UDim2.new(0.123441689, 0, 0.271681905, 0)
    sliderTitle.Size = UDim2.new(0.203365177, 0, 0.327697963, 0)
    sliderTitle.Font = Enum.Font.Gotham
    sliderTitle.Text = slidername
    sliderTitle.TextColor3 = Color3.fromRGB(255, 255, 255)
    sliderTitle.TextSize = 12.000
    sliderTitle.TextXAlignment = Enum.TextXAlignment.Left

    local slidercorner = Instance.new("UICorner")
    slidercorner.CornerRadius = UDim.new(0, 8)
    slidercorner.Parent = sliderBackground

    local slidercorner2 = Instance.new("UICorner")
    slidercorner2.CornerRadius = UDim.new(0, 8)
    slidercorner2.Parent = sliderFill

    local slidercorner3 = Instance.new("UICorner")
    slidercorner3.CornerRadius = UDim.new(0, 4)
    slidercorner3.Parent = sliderFrame

    local sliderBackground = sliderFrame:WaitForChild("SliderBackground")
    local sliderFill = sliderBackground:WaitForChild("SliderFill")
    local inputField = sliderFrame:WaitForChild("value")
    local slider = sliderFrame:FindFirstChild("value")

    local function updateSliderFill(mousePosition)
        local relativeX = mousePosition.X - sliderBackground.AbsolutePosition.X
        local fillWidth = math.clamp(relativeX, 0, sliderBackground.AbsoluteSize.X)
        sliderFill.Size = UDim2.new(0, fillWidth, 1, 0)
        local value = fillWidth / sliderBackground.AbsoluteSize.X * (value2 - value1) + value1
        inputField.Text = string.format("%.2f", value)
    end

    local function updateSliderFromInput()
        local newValue = tonumber(inputField.Text)
        if newValue then
            newValue = math.clamp(newValue, value1, value2)
            slider.Text = newValue
            local fillWidth = (newValue - value1) / (value2 - value1) * sliderBackground.AbsoluteSize.X
            sliderFill.Size = UDim2.new(0, fillWidth, 1, 0)
            -- print("Slider value: " .. newValue)
        else
            inputField.Text = tostring(value1)
            slider.Text = tostring(value1)
            sliderFill.Size = UDim2.new(0, 0, 1, 0)
        end
    end

    sliderBackground.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            updateSliderFill(game:GetService("UserInputService"):GetMouseLocation())
            local mouseMovedEvent = game:GetService("UserInputService").InputChanged:Connect(function(input)
                if input.UserInputType == Enum.UserInputType.MouseMovement then
                    updateSliderFill(input.Position)
                end
            end)
            game:GetService("UserInputService").InputEnded:Connect(function(input)
                if input.UserInputType == Enum.UserInputType.MouseButton1 then
                    mouseMovedEvent:Disconnect()
                end
            end)
        end
    end)
    inputField:GetPropertyChangedSignal("Text"):Connect(function()
        updateSliderFromInput()
    end)
    
    inputField.FocusLost:Connect(function(enterPressed)
        if enterPressed then
            updateSliderFromInput()
        end
    end)
    
    return slider
end

return library
